NAME
    Karma - Installation Guide

Standard Install
    Karma finally has a standard perl install. It comes with a Makefile.PL
    which you use to build a makefile for your system. You can do that as
    follows:

    `$ perl Makefile.PL'

    The resulting "Makefile" can be used to make, test, and install karma.

    Once you've installed karma on your system, you may want to create a
    karma user in your database. There are scripts in the "sql" directory
    for creating the user and prompting for a password. In addition if you
    will be using alertlog and os monitoring, you'll want to create the
    karma objects in the karma user schema. There is a script in the "sql"
    directory to create these objects as well.

    Once you have everything installed, the

    Quickstart Guide

    should explain to you how to get started. See the

    Configuration Guide

    for more information on how to create a

    read-only user

    for karma in your database, to

    edit the karma.conf file

    , or to use the karmagentd to

    monitor the alertlog

    and uptime statistics on your remote database.

Using Karma with a webserver
    Yes, you can use karma with a webserver, but there isn't too much you
    need to do on the karma end of things. Basically karma generates a set
    of html pages. These by default go into "doc_root" in the karma software
    directory, but this path can be changed via the `-k' option to karmad
    when you start it or the "doc_root" directive in your config file.
    Specify a valid path, and it will write the files there. Be sure to move
    the existing karma documents from doc_root to that location, and create
    directories named "docs","help", "images", and "info" there as well. In
    short, you should copy all the files from the install doc_root except
    maybe karma.html, which will be recreated.

Installing Perl
    Installing perl has become *MUCH* easier over the years, so don't be so
    afraid of installing it on your own system. You can install it from

    source

    binaries

    Installing on linux systems (most of which come with perl anyway) is
    often as simple as:

    `$ gunzip < stable.tar.gz | tar xvf -'

    `$ cd perl5.005_03'`$ ./configure'

    `$ make'and as root`$ make install'

Installing DBI
    It's pretty straightforward on most machines where Perl is already
    installed. Download the latest DBD-Oracle from your favorite

    CPAN Site

    , then follow these steps:

    `$ gunzip < DBI-1.13.tar.gz | tar xvf -'

    `$ cd DBI-1.13'`$ perl Makefile.PL'

    `$ make'`$ make test'then as root:

    `$ make install'

Installing DBD-Oracle
    It's pretty straightforward on most machines where Perl is already
    installed. Download the latest DBD-Oracle from your favorite

    CPAN Site

    , set your environment variables ORACLE_HOME, ORACLE_SID, be sure
    $ORACLE_HOME/bin is in your path, and that $ORACLE_HOME/lib is in your
    library path then followthese steps:

    `$ gunzip < DBD-Oracle-1.03.tar.gz | tar xvf -'

    `$ cd DBD-Oracle-1.03'

    `$ perl Makefile.PL'

    `$ make'

    `$ make test'

    then as root:

    `$ make install'

Installing Oracle
    Of course, none of this would be complete without an Oracle database to
    connect to. Installing Oracle, however, is really beyond the scope of
    this document. You can find useful documentation at

    http://technet.oracle.com

    though you'll need to register first. It's free. In addition, you can
    find linux specific installation instructions here:

    http://jordan.fortwayne.com/oracle/

